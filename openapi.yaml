
openapi: 3.0.0
info:
  title: Library API
  version: 1.0.0
  description: Üniversitenin çevrim içi kütüphane sistemi API’si.
servers:
  - url: https://api.library.example.com/v1
paths:
  /books:
    get:
      summary: Tüm kitapları getir
      description: Sayfalama parametreleri ile kitap listesini getirir.
      tags:
        - Books
      parameters:
        - in: query
          name: page
          schema:
            type: integer
          description: Sayfa numarası
        - in: query
          name: size
          schema:
            type: integer
          description: Sayfa boyutu
      responses:
        '200':
          description: Başarılı
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'
        '500':
          description: Sunucu hatası
    post:
      summary: Yeni kitap ekle
      tags:
        - Books
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
            example:
              id: "123e4567-e89b-12d3-a456-426614174000"
              title: "OpenAPI Öğreniyorum"
              author: "Ali Veli"
              isbn: "978-3-16-148410-0"
              publisher: "Kütüphane Yayınları"
              pageCount: 250
              stock: 5
      responses:
        '201':
          description: Kitap oluşturuldu
        '400':
          description: Geçersiz istek
        '500':
          description: Sunucu hatası

  /books/{id}:
    get:
      summary: Kitap detayını getir
      tags:
        - Books
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Başarılı
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
        '404':
          description: Kitap bulunamadı
    put:
      summary: Kitap güncelle
      tags:
        - Books
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
      responses:
        '200':
          description: Güncellendi
        '400':
          description: Geçersiz istek
        '404':
          description: Kitap bulunamadı
    delete:
      summary: Kitap sil
      tags:
        - Books
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Silindi
        '404':
          description: Bulunamadı

  /students:
    get:
      summary: Tüm öğrencileri getir
      tags:
        - Students
      responses:
        '200':
          description: Başarılı
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student'
        '500':
          description: Sunucu hatası
    post:
      summary: Yeni öğrenci ekle
      tags:
        - Students
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Student'
      responses:
        '201':
          description: Oluşturuldu
        '400':
          description: Geçersiz istek
        '500':
          description: Sunucu hatası

  /students/{id}:
    get:
      summary: Öğrenci detayını getir
      tags:
        - Students
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Başarılı
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
        '404':
          description: Öğrenci bulunamadı
    put:
      summary: Öğrenci güncelle
      tags:
        - Students
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Student'
      responses:
        '200':
          description: Güncellendi
        '400':
          description: Geçersiz istek
        '404':
          description: Öğrenci bulunamadı
    delete:
      summary: Öğrenci sil
      tags:
        - Students
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Silindi
        '404':
          description: Bulunamadı

  /loans:
    get:
      summary: Tüm ödünç işlemlerini getir
      tags:
        - Loans
      responses:
        '200':
          description: Başarılı
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Loan'
        '500':
          description: Sunucu hatası
    post:
      summary: Kitap ödünç al
      tags:
        - Loans
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Loan'
      responses:
        '201':
          description: Oluşturuldu
        '400':
          description: Geçersiz istek
        '500':
          description: Sunucu hatası

  /loans/{id}:
    get:
      summary: Ödünç alma detayını getir
      tags:
        - Loans
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Başarılı
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Loan'
        '404':
          description: Bulunamadı

  /loans/{id}/return:
    patch:
      summary: Kitabı iade et
      tags:
        - Loans
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: İade işlemi başarılı
        '400':
          description: Geçersiz istek
        '404':
          description: Bulunamadı

components:
  schemas:
    Book:
      type: object
      required: [id, title, author, isbn, publisher, pageCount, stock]
      properties:
        id:
          type: string
          format: uuid
        title:
          type: string
        author:
          type: string
        isbn:
          type: string
          format: isbn-13
        publisher:
          type: string
        pageCount:
          type: integer
        stock:
          type: integer
    Student:
      type: object
      required: [id, name, studentNumber, email, isActive]
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        studentNumber:
          type: string
        email:
          type: string
          format: email
        isActive:
          type: boolean
    Loan:
      type: object
      required: [id, studentId, bookId, loanDate, status]
      properties:
        id:
          type: string
          format: uuid
        studentId:
          type: string
          format: uuid
        bookId:
          type: string
          format: uuid
        loanDate:
          type: string
          format: date
        returnDate:
          type: string
          format: date
          nullable: true
        status:
          type: string
          enum: [ongoing, returned, late]
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
